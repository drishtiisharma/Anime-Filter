{"ast":null,"code":"const FILTER_KEYWORDS=[\"OVA\",\"Movie\",\"Special\",\"ONA\",\"Recap\",\"Season\",\"Part\"];export const cleanTitle=title=>{// Remove subtitles and extra words but keep full anime name\nlet mainTitle=title.split(/[:\\-|]/)[0].trim();mainTitle=mainTitle.replace(/https?.*/,'').trim();return mainTitle;};export const filterAnimeList=animeList=>{// Remove duplicates & filter unwanted types\nconst seenTitles=new Set();const filteredList=[];for(const anime of animeList){if(FILTER_KEYWORDS.some(keyword=>anime.includes(keyword))){continue;// Skip OVAs, Movies, Specials, and other extras\n}const mainTitle=cleanTitle(anime);if(mainTitle&&!seenTitles.has(mainTitle)){seenTitles.add(mainTitle);filteredList.push(mainTitle);}}// Sort alphabetically and number the list\nreturn filteredList.sort().map((title,index)=>\"\".concat(index+1,\". \").concat(title));};","map":{"version":3,"names":["FILTER_KEYWORDS","cleanTitle","title","mainTitle","split","trim","replace","filterAnimeList","animeList","seenTitles","Set","filteredList","anime","some","keyword","includes","has","add","push","sort","map","index","concat"],"sources":["C:/Users/HP/Desktop/Github-Projects/Projects/Anime-Filter-App/src/utils/animeFilter.js"],"sourcesContent":["const FILTER_KEYWORDS = [\"OVA\", \"Movie\", \"Special\", \"ONA\", \"Recap\", \"Season\", \"Part\"];\r\n\r\nexport const cleanTitle = (title) => {\r\n  // Remove subtitles and extra words but keep full anime name\r\n  let mainTitle = title.split(/[:\\-|]/)[0].trim();\r\n  mainTitle = mainTitle.replace(/https?.*/, '').trim();\r\n  return mainTitle;\r\n};\r\n\r\nexport const filterAnimeList = (animeList) => {\r\n  // Remove duplicates & filter unwanted types\r\n  const seenTitles = new Set();\r\n  const filteredList = [];\r\n  \r\n  for (const anime of animeList) {\r\n    if (FILTER_KEYWORDS.some(keyword => anime.includes(keyword))) {\r\n      continue; // Skip OVAs, Movies, Specials, and other extras\r\n    }\r\n    \r\n    const mainTitle = cleanTitle(anime);\r\n    \r\n    if (mainTitle && !seenTitles.has(mainTitle)) {\r\n      seenTitles.add(mainTitle);\r\n      filteredList.push(mainTitle);\r\n    }\r\n  }\r\n  \r\n  // Sort alphabetically and number the list\r\n  return filteredList.sort().map((title, index) => `${index + 1}. ${title}`);\r\n};"],"mappings":"AAAA,KAAM,CAAAA,eAAe,CAAG,CAAC,KAAK,CAAE,OAAO,CAAE,SAAS,CAAE,KAAK,CAAE,OAAO,CAAE,QAAQ,CAAE,MAAM,CAAC,CAErF,MAAO,MAAM,CAAAC,UAAU,CAAIC,KAAK,EAAK,CACnC;AACA,GAAI,CAAAC,SAAS,CAAGD,KAAK,CAACE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAC/CF,SAAS,CAAGA,SAAS,CAACG,OAAO,CAAC,UAAU,CAAE,EAAE,CAAC,CAACD,IAAI,CAAC,CAAC,CACpD,MAAO,CAAAF,SAAS,CAClB,CAAC,CAED,MAAO,MAAM,CAAAI,eAAe,CAAIC,SAAS,EAAK,CAC5C;AACA,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAC5B,KAAM,CAAAC,YAAY,CAAG,EAAE,CAEvB,IAAK,KAAM,CAAAC,KAAK,GAAI,CAAAJ,SAAS,CAAE,CAC7B,GAAIR,eAAe,CAACa,IAAI,CAACC,OAAO,EAAIF,KAAK,CAACG,QAAQ,CAACD,OAAO,CAAC,CAAC,CAAE,CAC5D,SAAU;AACZ,CAEA,KAAM,CAAAX,SAAS,CAAGF,UAAU,CAACW,KAAK,CAAC,CAEnC,GAAIT,SAAS,EAAI,CAACM,UAAU,CAACO,GAAG,CAACb,SAAS,CAAC,CAAE,CAC3CM,UAAU,CAACQ,GAAG,CAACd,SAAS,CAAC,CACzBQ,YAAY,CAACO,IAAI,CAACf,SAAS,CAAC,CAC9B,CACF,CAEA;AACA,MAAO,CAAAQ,YAAY,CAACQ,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAAClB,KAAK,CAAEmB,KAAK,MAAAC,MAAA,CAAQD,KAAK,CAAG,CAAC,OAAAC,MAAA,CAAKpB,KAAK,CAAE,CAAC,CAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}